networks:
  app_network:
    driver: bridge

services:
  user-auth-service:
    build:
      context: ./user-auth-service
    container_name: user-auth-service
    ports:
      - "8001:8000"
    environment:
      DATABASE_URL: postgres://auth_user:auth_pass@user-auth-db:5432/user-auth-db
    depends_on:
      - user-auth-db
    # healthcheck:
    #   test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 3
    networks:
      - app_network

  user-auth-db:
    image: postgres:13
    container_name: user-auth-db
    environment:
      POSTGRES_USER: auth_user
      POSTGRES_PASSWORD: auth_pass
      POSTGRES_DB: user-auth-db
    ports:
      - "5432:5432"
    volumes:
      - user-auth-data:/var/lib/postgresql/data
    # healthcheck:
    #   test: ["CMD", "pg_isready", "-U", "auth_user"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5
    networks:
      - app_network    

  quest-catalog-service:
    build:
      context: ./quest-catalog-service
    container_name: quest-catalog-service
    environment:
      DATABASE_URL: postgres://catalog_user:catalog_pass@quest-catalog-db:5432/quest-catalog-db
    depends_on:
      - quest-catalog-db
    ports:
      - "8002:8000"
    # healthcheck:
    #   test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 3
    networks:
      - app_network

  quest-catalog-db:
    image: postgres:13
    container_name: quest-catalog-db
    environment:
      POSTGRES_USER: catalog_user
      POSTGRES_PASSWORD: catalog_pass
      POSTGRES_DB: quest-catalog-db
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "catalog_user"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - quest-catalog-data:/var/lib/postgresql/data
    networks:
      - app_network

  quest-processing-service:
    build:
      context: ./quest-processing-service
    container_name: quest-processing-service
    ports:
      - "8003:8000"
    environment:
      DATABASE_URL: postgres://processing_user:processing_pass@quest-processing-db:5432/quest-processing-db
      QUEST_CATALOG_URL: http://quest-catalog-service:8000
    depends_on:
      - quest-processing-db
      - quest-catalog-service
    # healthcheck:
    #   test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 3
    networks:
      - app_network

  quest-processing-db:
    image: postgres:13
    container_name: quest-processing-db
    environment:
      POSTGRES_USER: processing_user
      POSTGRES_PASSWORD: processing_pass
      POSTGRES_DB: quest-processing-db
    ports:
      - "5434:5432"
    volumes:
      - quest-processing-data:/var/lib/postgresql/data
    # healthcheck:
    #   test: ["CMD", "pg_isready", "-U", "processing_user"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5
    networks:
      - app_network


  api-gateway:
    build:
      context: ./api-gateway
    container_name: api-gateway
    ports:
      - "8000:8000"
    depends_on:
      - user-auth-service
      - quest-catalog-service
      - quest-processing-service
    # healthcheck:
    #   test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 3
    networks:
      - app_network

volumes:
  user-auth-data:
  quest-catalog-data:
  quest-processing-data: